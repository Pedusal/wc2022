}
Eurodata_lkm =
Eurodata %>% group_by(Tyyppi) %>% count(Sisalto) %>% mutate(lkm =n)
Eurodata_lkm <- merge(Eurodata_lkm, en_fi_country_colors,
by.x = "Sisalto", by.y = "maa.value", all = TRUE)
###
#write.table(juniori, "data/tutkielmadata_varmuus.txt")
write.table(Eurodata, "Data/Eurodata.txt")
write.table(Eurodata_lkm, "Data/Eurodata_lkm.txt")
View(Eurodata)
View(Eurodata_lkm)
View(final4taulu)
View(Eurodata_lkm)
#rm(list=ls())  # REMOVE ALL OBJECTS
### Asenna hyvaksi havaitut paketit ######
pkgs <- c("readxl", # used for data import
"dplyr",        # used for testing linear hypothesis
"knitr"  #used for data import
,"gapminder"
,"stringr"
,"formattable"
,"markdown"
,"mame")
#install.packages(c(pkgs))
#install.packages("formattable")
#install.packages("DT")
####### Aseta tyoskentely kansio ja lataa veikkauset ###########
#Get the working directory:
#getwd()
library(readxl)
library(dplyr)
library(knitr)
#Setup the working directory:
#setwd("C:/Users/Pedu/Documents/GitHub/euro22/data")
myFiles <- list.files(Path = "Data",pattern = "xlsx$")
#rm(list=ls())  # REMOVE ALL OBJECTS
### Asenna hyvaksi havaitut paketit ######
pkgs <- c("readxl", # used for data import
"dplyr",        # used for testing linear hypothesis
"knitr"  #used for data import
,"gapminder"
,"stringr"
,"formattable"
,"markdown"
,"mame")
#install.packages(c(pkgs))
#install.packages("formattable")
#install.packages("DT")
####### Aseta tyoskentely kansio ja lataa veikkauset ###########
#Get the working directory:
#getwd()
library(readxl)
library(dplyr)
library(knitr)
#Setup the working directory:
setwd("Data")
myFiles <- list.files(pattern = "xlsx$")
veikkaukset <- lapply(myFiles, function(x) read_excel(x))
#oikearivi <- read_excel("data/11oikearivi.xlsx")
### Funktio isoja alkukirjaimia varten
simpleCap <- function(x) {
s <- strsplit(x, " ")[[1]]
paste(toupper(substring(s, 1,1)), substring(s, 2),
sep="", collapse=" ")
}
library(dplyr)
library(knitr)
library(stringr)
#### Luodaan Eurodata df ###
Eurodata <- data.frame(matrix(ncol = 7, nrow = 0))
#####
#####
if (length(veikkaukset) > 0) {
for (i in 1:length(veikkaukset)) {
veikkaus_apu <- as.data.frame(veikkaukset[i])
#TopScorer
Eurodata <- rbind(Eurodata,
c(veikkaus_apu[1,5], "TopScorer", "TS",
veikkaus_apu[5,14],veikkaus_apu[5,15],NA,NA)
)
#Mestari
Eurodata <- rbind(Eurodata,
c(veikkaus_apu[1,5], "Mestari", "M",
veikkaus_apu[5,18],NA,NA,NA)
)
#Valieramaat
Eurodata <- rbind(Eurodata,
c(veikkaus_apu[1,5], "Välierämaa", "Välierämaa1",
veikkaus_apu[5,17],NA,NA,NA)
)
Eurodata <- rbind(Eurodata,
c(veikkaus_apu[1,5], "Välierämaa", "Välierämaa2",
veikkaus_apu[6,17],NA,NA,NA)
)
Eurodata <- rbind(Eurodata,
c(veikkaus_apu[1,5], "Välierämaa", "Välierämaa3",
veikkaus_apu[7,17],NA,NA,NA)
)
Eurodata <- rbind(Eurodata,
c(veikkaus_apu[1,5], "Välierämaa", "Välierämaa4",
veikkaus_apu[8,17],NA,NA,NA)
)
#Maalintekijat
Eurodata <- rbind(Eurodata,
c(veikkaus_apu[1,5], "Maalintekijä", "Maalintekijä1",
veikkaus_apu[5,10],veikkaus_apu[5,11],NA,NA)
)
Eurodata <- rbind(Eurodata,
c(veikkaus_apu[1,5], "Maalintekijä", "Maalintekijä2",
veikkaus_apu[6,10],veikkaus_apu[6,11],NA,NA)
)
Eurodata <- rbind(Eurodata,
c(veikkaus_apu[1,5], "Maalintekijä", "Maalintekijä3",
veikkaus_apu[7,10],veikkaus_apu[7,11],NA,NA)
)
Eurodata <- rbind(Eurodata,
c(veikkaus_apu[1,5], "Maalintekijä", "Maalintekijä4",
veikkaus_apu[8,10],veikkaus_apu[8,11],NA,NA)
)
Eurodata <- rbind(Eurodata,
c(veikkaus_apu[1,5], "Maalintekijä", "Maalintekijä5",
veikkaus_apu[9,10],veikkaus_apu[9,11],NA,NA)
)
}
}
#####
### Eurodata col nimet   #########
colnames(Eurodata) <- c("Nimi", "Tyyppi", "Tyyppikd",
"Sisalto","Sisälto_tarkenne", "Tyyppi_lkm", "__")
if (length(veikkaukset)>0) {
## laitetaan iso alkukirjaimet KAIKKIALLE (jokaiseen muuttujaan)
Eurodata <- as.data.frame(apply(Eurodata, c(1,2), simpleCap))
## korvataan jostain tulevat nanat
Eurodata[Eurodata == "NANA"] <- NA
## korvataan Alankomaat -> Hollanti
Eurodata[Eurodata == "Hollanti"] <- "Alankomaat"
## trimmaus
Eurodata <- Eurodata %>%
mutate(across(where(is.character), str_trim, side = "both"))
}
Eurodata_lkm =
Eurodata %>% group_by(Tyyppi) %>% count(Sisalto) %>% mutate(lkm =n)
Eurodata_lkm <- merge(Eurodata_lkm, en_fi_country_colors,
by.x = "Sisalto", by.y = "maa.value", all = TRUE)
###
#write.table(juniori, "data/tutkielmadata_varmuus.txt")
write.table(Eurodata, "Data/Eurodata.txt")
write.table(Eurodata_lkm, "Data/Eurodata_lkm.txt")
View(Eurodata_lkm)
rm(list=ls())  # REMOVE ALL OBJECTS
### Asenna hyvaksi havaitut paketit ######
# pkgs <- c("data.table", # used for data import
#           "car",        # used for testing linear hypothesis
#           "haven",      # used for data import
#           #"tidyverse",  # data manipulation etc
#           "broom",      # for working with model coefficients and model summaries efficiently
#           "lubridate",  # used for creating timestamps
#           "DT",         # for displaying data_frames nicely
#           "GGally",     # for "ggpairs" plot
#           "ggfortify",
#           "plotly")  # for enhancing plots
#
# install.packages(c(pkgs))
# loaded_pkgs <- lapply(c(pkgs), library, character.only = TRUE)
#
# library(readxl)
#Sys.which("make")
#install.packages("https://cran.r-project.org/src/contrib/Archive/rlang/rlang_1.0.2.tar.gz", repos = NULL, type="source")
##install.packages("gt")
##library(gt)
# library(dplyr)
#devtools::install_github('rensa/ggflags')
## NEEDED
# bonukset
## NICE TO HAVE
# kiinnitä tulosrivit
# top 10 oma taulu?
veikkaus[[1,5]]
rm(list=ls())  # REMOVE ALL OBJECTS
### Asenna hyvaksi havaitut paketit ######
# pkgs <- c("data.table", # used for data import
#           "car",        # used for testing linear hypothesis
#           "haven",      # used for data import
#           #"tidyverse",  # data manipulation etc
#           "broom",      # for working with model coefficients and model summaries efficiently
#           "lubridate",  # used for creating timestamps
#           "DT",         # for displaying data_frames nicely
#           "GGally",     # for "ggpairs" plot
#           "ggfortify",
#           "plotly")  # for enhancing plots
#
# install.packages(c(pkgs))
# loaded_pkgs <- lapply(c(pkgs), library, character.only = TRUE)
#
# library(readxl)
#Sys.which("make")
#install.packages("https://cran.r-project.org/src/contrib/Archive/rlang/rlang_1.0.2.tar.gz", repos = NULL, type="source")
##install.packages("gt")
##library(gt)
# library(dplyr)
#devtools::install_github('rensa/ggflags')
## NEEDED
# bonukset
## NICE TO HAVE
# kiinnitä tulosrivit
# top 10 oma taulu?
####### Aseta tyoskentely kansio ja lataa veikkauset ###########
#Get the working directory:
#getwd()
library(readxl)
library(dplyr)
library(knitr)
#Setup the working directory:
setwd("Data")
myFiles <- list.files(pattern = "xlsx$")
veikkaukset <- lapply(myFiles, function(x) read_excel(x))
### Funktio isoja alkukirjaimia varten
simpleCap <- function(x) {
s <- strsplit(x, " ")[[1]]
paste(toupper(substring(s, 1,1)), substring(s, 2),
sep="", collapse=" ")
}
Eurodata <- read.table("Data/Eurodata.txt")
Eurodata_lkm <- read.table("Data/Eurodata_lkm.txt")
en_fi_country_colors <- read.table("Data/en_fi_country_colors.txt")
################### Hae oikea rivi ################
oikearivi <- read_excel("Data/11oikearivi.xlsx")
######## maaliporssi df luonti#################
maaliporssi <- oikearivi %>%
filter(!is.na(oikearivi[,10])
)
maaliporssi  <- as.data.frame(maaliporssi[-1,10:12])
###### Muokkaaa  sopivaksi #############
oikearivi <- oikearivi %>%
filter(!is.na(oikearivi[,4])
)
############## luo pelit vector
pelit <- c(1:(length(oikearivi$...3)-2))
#pelit[1] <- c("Nimi")
#pelit[2] <- c("Yhteensa")
pelit_juoksevanro <- c(1:length(pelit))
### pelit vektoriin pelien nimet #####
for (i in pelit_juoksevanro) {
pelit[i] <- c(paste(oikearivi$...3[i], "-", oikearivi$...5[i]))
}
############## pistetaulu nimet vector
pt_nimet <- c(1:length(oikearivi$...3)+3)
pt_nimet[1] <- c("Nimi")
pt_nimet[2] <- c("Yhteensa")
pt_nimet[3] <- c("Maalit")
for (i in pelit_juoksevanro) {
pt_nimet[i+3] <- c(paste(oikearivi$...3[i], "-", oikearivi$...5[i]))
}
#### luodaan pelaajat vektori #####
pelaajat <- c(1:(length(veikkaukset)))
pelaajat[1] <- c("Tulokset")
if (length(veikkaukset) > 0) {
for (u in 2:length(pelaajat)) {
veikkaus <- data.frame(veikkaukset[u])
pelaajat[u] <- veikkaus[[1,5]]
#pelaaja <- veikkaus[[1,5]]
}
}
####### Tee jokaisesta vaikkauksesta oma dataframe ###########
################# luo veikkaustaulu
veikkaustaulu <- matrix(NA,length(pelaajat),length(pelit)+1)
vt_nimet <- c(1:(length(pelit)+1))
vt_nimet[1] <- c("Nimi")
vt_nimet[2:(length(pelit)+1)] <- c(pelit)
colnames(veikkaustaulu) <- c(vt_nimet)
veikkaustaulu <- as.data.frame(veikkaustaulu)
# df = dataframe
# old.var.name = The name you don't like anymore
# new.var.name = The name you want to get
#names(veikkaustaulu)[names(veikkaustaulu) == 'Yhteensa'] <- '____'
##### lisataan pelaajat veikkaustauluun #######
veikkaustaulu$Nimi <- pelaajat
################# Luo Pistetaulu ###################
pistetaulu <- matrix(NA,length(pelaajat)-1,length(pt_nimet))
colnames(pistetaulu) <- c(pt_nimet)
pistetaulu <- as.data.frame(pistetaulu)
#########################################################################
################ luo Maalintekijä taulu ja täytä se ######################
maalintekijat <- matrix(NA,length(pelaajat)-1,7)
colnames(maalintekijat) <- c("nimi","Maalikuningas", "Maalintekija1", "Maalintekija2", "Maalintekija3", "Maalintekija4", "Maalintekija5")
maalintekijat <- as.data.frame(maalintekijat)
veikkaus[[1,5]]
veikkaus$...11[2]
View(veikkaus)
veikkaus$...14[2]
veikkaus <- veikkaus %>%
filter(!is.na(veikkaus[,10])
)
veikkaus$...14[2]
View(maalintekijat)
bonus_maalarit  <- Eurodata_lkm %>% filter(
Tyyppi = "Maalintekija"
)
bonus_maalarit  <- Eurodata_lkm %>% filter(
Tyyppi == "Maalintekija"
)
View(bonus_maalarit)
bonus_maalarit  <- Eurodata_lkm %>% filter(
Tyyppi == "Maalintekijä"
)
bonus_maalarit  <- Eurodata_lkm %>% filter(
Tyyppi == "Maalintekijä",
lkm == 1
)
View(bonus_maalarit)
bonus_maalarit[,1])
length(bonus_maalarit[,1])
bonus_maalarit[iii,1]
bonus_maalarit[1,1]
bonus_maalarit$Sisalto[1]
View(maaliporssi)
pelaajat_maalarit <- c(maalintekijat[i,3:7])
maalari <-pelaajat_maalarit[ii]
"Achraf Hakimi" %in% names(maaliporssi)
"Achraf Hakimi" %in% maaliporssi[1]
"Achraf Hakimi" %in% maaliporssi[,1]
"Harry Kane" %in% maaliporssi[,1]
View(maalintekijat)
rm(list=ls())  # REMOVE ALL OBJECTS
### Asenna hyvaksi havaitut paketit ######
# pkgs <- c("data.table", # used for data import
#           "car",        # used for testing linear hypothesis
#           "haven",      # used for data import
#           #"tidyverse",  # data manipulation etc
#           "broom",      # for working with model coefficients and model summaries efficiently
#           "lubridate",  # used for creating timestamps
#           "DT",         # for displaying data_frames nicely
#           "GGally",     # for "ggpairs" plot
#           "ggfortify",
#           "plotly")  # for enhancing plots
#
# install.packages(c(pkgs))
# loaded_pkgs <- lapply(c(pkgs), library, character.only = TRUE)
#
# library(readxl)
#Sys.which("make")
#install.packages("https://cran.r-project.org/src/contrib/Archive/rlang/rlang_1.0.2.tar.gz", repos = NULL, type="source")
##install.packages("gt")
##library(gt)
# library(dplyr)
#devtools::install_github('rensa/ggflags')
## NEEDED
# bonukset
## NICE TO HAVE
# kiinnitä tulosrivit
# top 10 oma taulu?
####### Aseta tyoskentely kansio ja lataa veikkauset ###########
#Get the working directory:
#getwd()
library(readxl)
library(dplyr)
library(knitr)
#Setup the working directory:
setwd("Data")
myFiles <- list.files(pattern = "xlsx$")
veikkaukset <- lapply(myFiles, function(x) read_excel(x))
### Funktio isoja alkukirjaimia varten
simpleCap <- function(x) {
s <- strsplit(x, " ")[[1]]
paste(toupper(substring(s, 1,1)), substring(s, 2),
sep="", collapse=" ")
}
Eurodata <- read.table("Data/Eurodata.txt")
Eurodata_lkm <- read.table("Data/Eurodata_lkm.txt")
en_fi_country_colors <- read.table("Data/en_fi_country_colors.txt")
################### Hae oikea rivi ################
oikearivi <- read_excel("Data/11oikearivi.xlsx")
######## maaliporssi df luonti#################
maaliporssi <- oikearivi %>%
filter(!is.na(oikearivi[,10])
)
maaliporssi  <- as.data.frame(maaliporssi[-1,10:12])
###### Muokkaaa  sopivaksi #############
oikearivi <- oikearivi %>%
filter(!is.na(oikearivi[,4])
)
############## luo pelit vector
pelit <- c(1:(length(oikearivi$...3)-2))
#pelit[1] <- c("Nimi")
#pelit[2] <- c("Yhteensa")
pelit_juoksevanro <- c(1:length(pelit))
### pelit vektoriin pelien nimet #####
for (i in pelit_juoksevanro) {
pelit[i] <- c(paste(oikearivi$...3[i], "-", oikearivi$...5[i]))
}
############## pistetaulu nimet vector
pt_nimet <- c(1:length(oikearivi$...3)+3)
pt_nimet[1] <- c("Nimi")
pt_nimet[2] <- c("Yhteensa")
pt_nimet[3] <- c("Maalit")
for (i in pelit_juoksevanro) {
pt_nimet[i+3] <- c(paste(oikearivi$...3[i], "-", oikearivi$...5[i]))
}
#### luodaan pelaajat vektori #####
pelaajat <- c(1:(length(veikkaukset)))
pelaajat[1] <- c("Tulokset")
if (length(veikkaukset) > 0) {
for (u in 2:length(pelaajat)) {
veikkaus <- data.frame(veikkaukset[u])
pelaajat[u] <- veikkaus[[1,5]]
#pelaaja <- veikkaus[[1,5]]
}
}
####### Tee jokaisesta vaikkauksesta oma dataframe ###########
################# luo veikkaustaulu
veikkaustaulu <- matrix(NA,length(pelaajat),length(pelit)+1)
vt_nimet <- c(1:(length(pelit)+1))
vt_nimet[1] <- c("Nimi")
vt_nimet[2:(length(pelit)+1)] <- c(pelit)
colnames(veikkaustaulu) <- c(vt_nimet)
veikkaustaulu <- as.data.frame(veikkaustaulu)
# df = dataframe
# old.var.name = The name you don't like anymore
# new.var.name = The name you want to get
#names(veikkaustaulu)[names(veikkaustaulu) == 'Yhteensa'] <- '____'
##### lisataan pelaajat veikkaustauluun #######
veikkaustaulu$Nimi <- pelaajat
################# Luo Pistetaulu ###################
pistetaulu <- matrix(NA,length(pelaajat)-1,length(pt_nimet))
colnames(pistetaulu) <- c(pt_nimet)
pistetaulu <- as.data.frame(pistetaulu)
#########################################################################
################ luo Maalintekijä taulu ja täytä se ######################
maalintekijat <- matrix(NA,length(pelaajat)-1,7)
colnames(maalintekijat) <- c("nimi","Maalikuningas", "Maalintekija1", "Maalintekija2", "Maalintekija3", "Maalintekija4", "Maalintekija5")
maalintekijat <- as.data.frame(maalintekijat)
if (length(veikkaukset) > 0) {
for (uu in 2:length(veikkaukset)) {
veikkaus <- data.frame(veikkaukset[uu])
maalintekijat[uu-1,1] <- veikkaus[[1,5]]
veikkaus <- veikkaus %>%
filter(!is.na(veikkaus[,10])
)
maalintekijat[uu-1,2]   <-  veikkaus$...14[2] #maalikuninkaa lisays
maalintekijat[uu-1,3:7] <- c(sort(veikkaus$...10[2:6])) #muut
}
}
View(maalintekijat)
maalintekijat$Maalit <- c(1:length(maalintekijat[,1]))*0 #sareke maaleille
maalintekijat$Bonarit <- c(1:length(maalintekijat[,1]))*0 #sarake bonuksille
if (length(veikkaukset) > 0) {
for (i in 1:length(maalintekijat[,1])) { # haetaan osallistujan maalintekijat
pelaajat_maalarit <- c(maalintekijat[i,3:7])
for (ii in 1:length(pelaajat_maalarit)) { # haetaan pelaaja
maalari <-pelaajat_maalarit[ii]
if (length(maaliporssi[,1])>0)  { #suorita jos maaliporssissa maalintekijoita
for (iii in 1:length(maaliporssi[,1])) { # katsotaan onko pelaaja maalipörssissa
maalintekija <- maaliporssi[iii,1]
if (is.na(maalintekija)) {
## do nothing
} else if (maalari == maalintekija) { #jos maalari porssissa lisataan pisteita
maalintekijat$Maalit[i] <- as.numeric(maalintekijat$Maalit[i]) +
as.numeric(maaliporssi[iii,3])
}
}
}
}
}
}
View(maaliporssi)
bonus_maalarit  <- Eurodata_lkm %>% filter(
Tyyppi == "Maalintekijä",
lkm == 1
)
if (length(veikkaukset) > 0) {
for (i in 1:length(maalintekijat[,1])) { # haetaan osallistujan maalintekijat
pelaajat_maalarit <- c(maalintekijat[i,3:7])
for (ii in 1:length(pelaajat_maalarit)) { # haetaan pelaaja
maalari <-pelaajat_maalarit[ii]
if (length(maaliporssi[,1])>0)  { #suorita jos maaliporssissa maalintekijoita
for (iii in 1:length(bonus_maalarit[,1])) { # katsotaan onko pelaaja bonari
bonari <- bonus_maalarit$Sisalto[iii] #bonari nimi
if (is.na(bonari)) {
## do nothing
} else if (bonari %in% maaliporssi[,1] && maalari == bonari) { #jos maalari porssissa lisataan pisteita
maalintekijat$Bonarit[i] <- 5
}
}
}
}
}
}
as.numeric(maalintekijat$Bonarit[i]) + 5
bonus_maalarit  <- Eurodata_lkm %>% filter(
Tyyppi == "Maalintekijä",
lkm == 1
)
if (length(veikkaukset) > 0) {
for (i in 1:length(maalintekijat[,1])) { # haetaan osallistujan maalintekijat
pelaajat_maalarit <- c(maalintekijat[i,3:7])
for (ii in 1:length(pelaajat_maalarit)) { # haetaan pelaaja
maalari <-pelaajat_maalarit[ii]
if (length(maaliporssi[,1])>0)  { #suorita jos maaliporssissa maalintekijoita
for (iii in 1:length(bonus_maalarit[,1])) { # katsotaan onko pelaaja bonari
bonari <- bonus_maalarit$Sisalto[iii] #bonari nimi
if (is.na(bonari)) {
## do nothing
} else if (bonari %in% maaliporssi[,1] && maalari == bonari) { #jos maalari porssissa lisataan pisteita
maalintekijat$Bonarit[i] <- as.numeric(maalintekijat$Bonarit[i]) + 5
}
}
}
}
}
}
View(bonus_maalarit)
View(Eurodata_lkm)
